name: Build and Deploy

on:
  push:
    branches:
      - '**'
  pull_request:
    types: [opened, synchronize]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}

    - name: Build Docker image
      run: |
        BRANCH_NAME=$(echo $GITHUB_REF | awk -F/ '{print $3}')
        gcloud builds submit --tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/api:$BRANCH_NAME

    - name: Deploy to Cloud Run
      run: |
        BRANCH_NAME=$(echo $GITHUB_REF | awk -F/ '{print $3}')
        gcloud run deploy ${{ secrets.GCP_PROJECT_ID }}-$BRANCH_NAME \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/api:$BRANCH_NAME \
          --platform managed \
          --region us-central1 \
          --allow-unauthenticated

    - name: Update Firestore
      run: |
        BRANCH_NAME=$(echo $GITHUB_REF | awk -F/ '{print $3}')
        URL=$(gcloud run services describe ${{ secrets.GCP_PROJECT_ID }}-$BRANCH_NAME \
          --platform managed \
          --region us-central1 \
          --format 'value(status.url)')
        python3 -c "
        from firebase_admin import firestore, credentials
        import firebase_admin
        cred = credentials.Certificate('serviceAccountKey.json')
        firebase_admin.initialize_app(cred)
        db = firestore.client()
        db.collection('projects').document('${{ secrets.GCP_PROJECT_ID }}-$BRANCH_NAME').set({
            'status': 'active',
            'url': '$URL',
            'branch': '$BRANCH_NAME'
        })
        " 